
# yacctab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMODAND ANDEQUAL ARROW AUTO BREAK CASE CHAR CHAR_CONST COLON COMMA CONDOP CONST CONTINUE DEFAULT DIVEQUAL DIVIDE DO DOUBLE ELLIPSIS ELSE ENUM EQ EQUALS EXTERN FLOAT FLOAT_CONST FOR GE GOTO GT HEX_FLOAT_CONST ID IF INLINE INT INT_CONST_BIN INT_CONST_DEC INT_CONST_HEX INT_CONST_OCT LAND LBRACE LBRACKET LE LNOT LONG LOR LPAREN LSHIFT LSHIFTEQUAL LT MINUS MINUSEQUAL MINUSMINUS MOD MODEQUAL NE NOT OFFSETOF OR OREQUAL PERIOD PLUS PLUSEQUAL PLUSPLUS PPHASH RBRACE RBRACKET REGISTER RESTRICT RETURN RPAREN RSHIFT RSHIFTEQUAL SEMI SHORT SIGNED SIZEOF STATIC STRING_LITERAL STRUCT SWITCH TIMES TIMESEQUAL TYPEDEF TYPEID UNION UNSIGNED VOID VOLATILE WCHAR_CONST WHILE WSTRING_LITERAL XOR XOREQUAL _BOOL _COMPLEXabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_opt : empty\n| declaration_specifiersdesignation_opt : empty\n| designationexpression_opt : empty\n| expressionidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_listspecifier_qualifier_list_opt : empty\n| specifier_qualifier_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         function_definition : declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n         decl_body : declaration_specifiers init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers  : type_qualifier declaration_specifiers_opt\n         declaration_specifiers  : type_specifier declaration_specifiers_opt\n         declaration_specifiers  : storage_class_specifier declaration_specifiers_opt\n         declaration_specifiers  : function_specifier declaration_specifiers_opt\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier  : VOID\n                            | _BOOL\n                            | CHAR\n                            | SHORT\n                            | INT\n                            | LONG\n                            | FLOAT\n                            | DOUBLE\n                            | _COMPLEX\n                            | SIGNED\n                            | UNSIGNED\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator_list    : EQUALS initializer\n         init_declarator_list    : abstract_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         specifier_qualifier_list    : type_qualifier specifier_qualifier_list_opt\n         specifier_qualifier_list    : type_specifier specifier_qualifier_list_opt\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : specifier_qualifier_list abstract_declarator SEMI\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : direct_declarator\n         declarator  : pointer direct_declarator\n         declarator  : pointer TYPEID\n         direct_declarator   : ID\n         direct_declarator   : LPAREN declarator RPAREN\n         direct_declarator   : direct_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_declarator   : direct_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                | direct_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_declarator   : direct_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_declarator   : direct_declarator LPAREN parameter_type_list RPAREN\n                                | direct_declarator LPAREN identifier_list_opt RPAREN\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA identifier RPAREN\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'translation_unit_or_empty':([0,],[1,]),'translation_unit':([0,],[2,]),'empty':([0,9,10,16,17,18,19,23,55,56,61,62,68,69,91,95,106,145,147,148,149,150,169,170,171,174,192,258,305,308,315,358,361,387,395,405,417,418,419,421,433,435,437,439,445,446,],[3,52,59,73,73,73,73,80,59,52,102,109,80,154,173,102,207,264,109,102,109,80,293,299,299,304,304,207,304,304,304,102,410,304,304,410,304,304,304,304,304,410,304,304,304,304,]),'external_declaration':([0,2,],[4,50,]),'function_definition':([0,2,],[5,5,]),'declaration':([0,2,9,53,56,91,174,315,],[6,6,54,92,54,176,176,395,]),'pp_directive':([0,2,],[7,7,]),'declarator':([0,2,10,21,55,61,95,99,106,169,383,],[9,9,56,78,93,78,78,93,205,296,296,]),'declaration_specifiers':([0,2,9,16,17,18,19,53,56,61,69,91,95,148,174,204,315,358,],[10,10,55,74,74,74,74,55,55,106,106,55,106,106,55,106,55,106,]),'decl_body':([0,2,9,53,56,91,174,315,],[11,11,11,11,11,11,11,11,]),'direct_declarator':([0,2,10,14,21,55,58,61,94,95,99,106,169,383,],[13,13,13,70,13,13,70,13,70,13,13,13,13,13,]),'pointer':([0,2,10,21,55,61,79,95,99,106,169,258,358,383,],[14,14,58,14,94,58,158,94,14,58,94,357,357,14,]),'type_qualifier':([0,2,9,16,17,18,19,23,53,56,61,68,69,81,89,91,95,120,148,150,151,165,166,167,170,171,174,204,249,253,255,261,287,288,315,358,],[16,16,16,16,16,16,16,82,16,16,16,82,16,159,170,16,16,170,16,82,159,170,170,170,170,170,16,16,170,170,170,170,170,170,16,16,]),'type_specifier':([0,2,9,16,17,18,19,53,56,61,69,89,91,95,120,148,165,166,167,170,171,174,204,249,253,255,261,287,288,315,358,],[17,17,17,17,17,17,17,17,17,17,17,171,17,17,171,17,171,171,171,171,171,17,17,171,171,171,171,171,171,17,17,]),'storage_class_specifier':([0,2,9,16,17,18,19,53,56,61,69,91,95,148,174,204,315,358,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'function_specifier':([0,2,9,16,17,18,19,53,56,61,69,91,95,148,174,204,315,358,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'typedef_name':([0,2,9,16,17,18,19,53,56,61,69,89,91,95,120,148,165,166,167,170,171,174,204,249,253,255,261,287,288,315,358,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'enum_specifier':([0,2,9,16,17,18,19,53,56,61,69,89,91,95,120,148,165,166,167,170,171,174,204,249,253,255,261,287,288,315,358,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'struct_or_union_specifier':([0,2,9,16,17,18,19,53,56,61,69,89,91,95,120,148,165,166,167,170,171,174,204,249,253,255,261,287,288,315,358,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'struct_or_union':([0,2,9,16,17,18,19,53,56,61,69,89,91,95,120,148,165,166,167,170,171,174,204,249,253,255,261,287,288,315,358,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'declaration_list_opt':([9,56,],[51,96,]),'declaration_list':([9,56,],[53,53,]),'init_declarator_list_opt':([10,55,],[57,57,]),'init_declarator_list':([10,55,],[60,60,]),'init_declarator':([10,55,99,],[63,63,201,]),'abstract_declarator':([10,55,61,95,106,169,258,358,],[65,65,100,100,208,292,208,100,]),'direct_abstract_declarator':([10,55,58,61,94,95,106,169,258,357,358,],[66,66,98,66,98,66,66,66,66,98,66,]),'declaration_specifiers_opt':([16,17,18,19,],[72,75,76,77,]),'type_qualifier_list_opt':([23,68,150,],[79,149,276,]),'type_qualifier_list':([23,68,150,],[81,151,81,]),'brace_open':([46,47,51,64,83,84,87,88,91,96,97,174,192,265,305,308,354,387,402,403,404,409,417,418,419,437,445,446,],[85,89,91,145,160,161,165,166,91,91,145,91,91,145,91,91,405,91,405,405,405,145,91,91,91,91,91,91,]),'compound_statement':([51,91,96,174,192,305,308,387,417,418,419,437,445,446,],[90,180,199,180,180,180,180,180,180,180,180,180,180,180,]),'parameter_type_list_opt':([61,95,148,358,],[101,101,273,101,]),'parameter_type_list':([61,69,95,148,358,],[103,152,103,103,103,]),'parameter_list':([61,69,95,148,358,],[104,104,104,104,104,]),'parameter_declaration':([61,69,95,148,204,358,],[105,105,105,105,322,105,]),'assignment_expression_opt':([62,147,149,],[107,271,274,]),'assignment_expression':([62,64,91,97,120,147,149,174,192,197,211,223,242,243,249,253,255,265,276,277,305,308,310,311,312,313,315,387,395,401,409,417,418,419,420,421,433,437,439,445,446,],[110,144,198,144,198,110,110,198,198,198,323,198,198,346,198,198,198,144,372,373,198,198,198,390,198,198,198,198,198,424,144,198,198,198,198,198,198,198,198,198,198,]),'conditional_expression':([62,64,91,97,120,147,149,174,185,192,197,211,223,242,243,249,253,255,265,269,276,277,286,297,305,308,310,311,312,313,315,384,387,395,398,401,409,417,418,419,420,421,433,437,439,445,446,],[111,111,111,111,111,111,111,111,307,111,111,111,111,111,111,111,111,111,111,307,111,111,307,307,111,111,111,111,111,111,111,307,111,111,423,111,111,111,111,111,111,111,111,111,111,111,111,]),'unary_expression':([62,64,91,97,115,116,117,119,120,147,149,174,185,192,197,211,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,249,253,255,265,269,276,277,286,297,305,308,310,311,312,313,315,354,384,387,395,398,401,403,409,417,418,419,420,421,433,437,439,445,446,],[112,112,112,112,248,250,252,254,112,112,112,112,252,112,112,112,112,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,112,112,112,112,112,112,252,112,112,252,252,112,112,112,112,112,112,112,252,252,112,112,252,112,252,112,112,112,112,112,112,112,112,112,112,112,]),'binary_expression':([62,64,91,97,120,147,149,174,185,192,197,211,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,249,253,255,265,269,276,277,286,297,305,308,310,311,312,313,315,384,387,395,398,401,409,417,418,419,420,421,433,437,439,445,446,],[113,113,113,113,113,113,113,113,113,113,113,113,113,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'postfix_expression':([62,64,91,97,115,116,117,119,120,147,149,174,185,192,197,211,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,249,253,255,265,269,276,277,286,297,305,308,310,311,312,313,315,354,384,387,395,398,401,403,409,417,418,419,420,421,433,437,439,445,446,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'unary_operator':([62,64,91,97,115,116,117,119,120,147,149,174,185,192,197,211,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,249,253,255,265,269,276,277,286,297,305,308,310,311,312,313,315,354,384,387,395,398,401,403,409,417,418,419,420,421,433,437,439,445,446,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'cast_expression':([62,64,91,97,117,120,147,149,174,185,192,197,211,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,249,253,255,265,269,276,277,286,297,305,308,310,311,312,313,315,354,384,387,395,398,401,403,409,417,418,419,420,421,433,437,439,445,446,],[118,118,118,118,251,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,406,118,118,118,118,118,406,118,118,118,118,118,118,118,118,118,118,118,]),'primary_expression':([62,64,91,97,115,116,117,119,120,147,149,174,185,192,197,211,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,249,253,255,265,269,276,277,286,297,305,308,310,311,312,313,315,354,384,387,395,398,401,403,409,417,418,419,420,421,433,437,439,445,446,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'identifier':([62,64,69,91,97,115,116,117,119,120,147,149,174,185,192,197,211,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,249,253,255,265,269,270,276,277,280,286,297,305,308,310,311,312,313,315,354,384,387,395,398,401,403,407,409,417,418,419,420,421,433,437,439,445,446,],[128,128,156,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,366,128,128,374,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,426,128,128,128,128,128,128,128,128,128,128,128,]),'constant':([62,64,91,97,115,116,117,119,120,147,149,174,185,192,197,211,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,249,253,255,265,269,276,277,286,297,305,308,310,311,312,313,315,354,384,387,395,398,401,403,409,417,418,419,420,421,433,437,439,445,446,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'unified_string_literal':([62,64,91,97,115,116,117,119,120,147,149,174,185,192,197,211,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,249,253,255,265,269,276,277,286,297,305,308,310,311,312,313,315,354,384,387,395,398,401,403,409,417,418,419,420,421,433,437,439,445,446,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'unified_wstring_literal':([62,64,91,97,115,116,117,119,120,147,149,174,185,192,197,211,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,249,253,255,265,269,276,277,286,297,305,308,310,311,312,313,315,354,384,387,395,398,401,403,409,417,418,419,420,421,433,437,439,445,446,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'initializer':([64,97,265,409,],[143,200,362,427,]),'identifier_list_opt':([69,],[153,]),'identifier_list':([69,],[155,]),'enumerator_list':([85,160,161,],[162,281,282,]),'enumerator':([85,160,161,284,],[163,163,163,377,]),'struct_declaration_list':([89,165,166,],[167,287,288,]),'struct_declaration':([89,165,166,167,287,288,],[168,168,168,290,290,290,]),'specifier_qualifier_list':([89,120,165,166,167,170,171,249,253,255,261,287,288,],[169,258,169,169,169,300,300,258,258,258,258,169,169,]),'block_item_list_opt':([91,],[172,]),'block_item_list':([91,],[174,]),'block_item':([91,174,],[175,303,]),'statement':([91,174,192,305,308,387,417,418,419,437,445,446,],[177,177,314,386,388,416,428,429,430,442,447,448,]),'labeled_statement':([91,174,192,305,308,387,417,418,419,437,445,446,],[178,178,178,178,178,178,178,178,178,178,178,178,]),'expression_statement':([91,174,192,305,308,387,417,418,419,437,445,446,],[179,179,179,179,179,179,179,179,179,179,179,179,]),'selection_statement':([91,174,192,305,308,387,417,418,419,437,445,446,],[181,181,181,181,181,181,181,181,181,181,181,181,]),'iteration_statement':([91,174,192,305,308,387,417,418,419,437,445,446,],[182,182,182,182,182,182,182,182,182,182,182,182,]),'jump_statement':([91,174,192,305,308,387,417,418,419,437,445,446,],[183,183,183,183,183,183,183,183,183,183,183,183,]),'expression_opt':([91,174,192,305,308,315,387,395,417,418,419,421,433,437,439,445,446,],[187,187,187,187,187,394,187,422,187,187,187,432,440,187,444,187,187,]),'expression':([91,120,174,192,197,223,242,249,253,255,305,308,310,312,313,315,387,395,417,418,419,420,421,433,437,439,445,446,],[189,257,189,189,319,324,343,257,257,257,189,189,389,391,392,189,189,189,189,189,189,431,189,189,189,189,189,189,]),'abstract_declarator_opt':([106,258,],[206,356,]),'assignment_operator':([112,],[211,]),'type_name':([120,249,253,255,261,],[256,351,352,353,359,]),'initializer_list_opt':([145,],[262,]),'initializer_list':([145,405,],[263,425,]),'designation_opt':([145,361,405,435,],[265,409,265,409,]),'designation':([145,361,405,435,],[266,266,266,266,]),'designator_list':([145,361,405,435,],[267,267,267,267,]),'designator':([145,267,361,405,435,],[268,364,268,268,268,]),'brace_close':([162,167,172,262,281,282,287,288,361,425,435,],[283,289,302,360,375,376,379,380,408,434,441,]),'struct_declarator_list_opt':([169,],[291,]),'struct_declarator_list':([169,],[294,]),'struct_declarator':([169,383,],[295,414,]),'specifier_qualifier_list_opt':([170,171,],[298,301,]),'constant_expression':([185,269,286,297,384,],[306,365,378,385,415,]),'argument_expression_list':([243,],[344,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',42),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',42),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',42),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',42),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_specifiers_opt -> empty','declaration_specifiers_opt',1,'p_declaration_specifiers_opt','plyparser.py',42),
  ('declaration_specifiers_opt -> declaration_specifiers','declaration_specifiers_opt',1,'p_declaration_specifiers_opt','plyparser.py',43),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',42),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',42),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',42),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',42),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',42),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',42),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('specifier_qualifier_list_opt -> empty','specifier_qualifier_list_opt',1,'p_specifier_qualifier_list_opt','plyparser.py',42),
  ('specifier_qualifier_list_opt -> specifier_qualifier_list','specifier_qualifier_list_opt',1,'p_specifier_qualifier_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',42),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',42),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',501),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',502),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',510),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',517),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',529),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',534),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',539),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',544),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',549),
  ('function_definition -> declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',558),
  ('function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',575),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',586),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',587),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',588),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',589),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',590),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',591),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',605),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',664),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',673),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',674),
  ('declaration_specifiers -> type_qualifier declaration_specifiers_opt','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',679),
  ('declaration_specifiers -> type_specifier declaration_specifiers_opt','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',684),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers_opt','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',689),
  ('declaration_specifiers -> function_specifier declaration_specifiers_opt','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',694),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',699),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',700),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',701),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',702),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',703),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',708),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier_1','c_parser.py',713),
  ('type_specifier -> _BOOL','type_specifier',1,'p_type_specifier_1','c_parser.py',714),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier_1','c_parser.py',715),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier_1','c_parser.py',716),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier_1','c_parser.py',717),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier_1','c_parser.py',718),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier_1','c_parser.py',719),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier_1','c_parser.py',720),
  ('type_specifier -> _COMPLEX','type_specifier',1,'p_type_specifier_1','c_parser.py',721),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier_1','c_parser.py',722),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier_1','c_parser.py',723),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier_2','c_parser.py',728),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier_2','c_parser.py',729),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier_2','c_parser.py',730),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',735),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',736),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',737),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list_1','c_parser.py',742),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list_1','c_parser.py',743),
  ('init_declarator_list -> EQUALS initializer','init_declarator_list',2,'p_init_declarator_list_2','c_parser.py',753),
  ('init_declarator_list -> abstract_declarator','init_declarator_list',1,'p_init_declarator_list_3','c_parser.py',761),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',769),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',770),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list_opt','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',775),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',780),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',788),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',789),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',798),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',807),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',808),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',817),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',818),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',825),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',826),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',831),
  ('struct_declaration -> specifier_qualifier_list abstract_declarator SEMI','struct_declaration',3,'p_struct_declaration_2','c_parser.py',869),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',883),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',884),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',892),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',897),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',898),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',906),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',907),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',912),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',917),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',918),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',923),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',924),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',925),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',936),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',937),
  ('declarator -> direct_declarator','declarator',1,'p_declarator_1','c_parser.py',952),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator_2','c_parser.py',957),
  ('declarator -> pointer TYPEID','declarator',2,'p_declarator_3','c_parser.py',966),
  ('direct_declarator -> ID','direct_declarator',1,'p_direct_declarator_1','c_parser.py',977),
  ('direct_declarator -> LPAREN declarator RPAREN','direct_declarator',3,'p_direct_declarator_2','c_parser.py',986),
  ('direct_declarator -> direct_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_declarator',5,'p_direct_declarator_3','c_parser.py',991),
  ('direct_declarator -> direct_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_declarator',6,'p_direct_declarator_4','c_parser.py',1005),
  ('direct_declarator -> direct_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_declarator',6,'p_direct_declarator_4','c_parser.py',1006),
  ('direct_declarator -> direct_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_declarator',5,'p_direct_declarator_5','c_parser.py',1026),
  ('direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN','direct_declarator',4,'p_direct_declarator_6','c_parser.py',1037),
  ('direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN','direct_declarator',4,'p_direct_declarator_6','c_parser.py',1038),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1065),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1066),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1095),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1096),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1101),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1102),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1110),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1111),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1120),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1131),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1162),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1163),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1172),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1177),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1178),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1186),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1187),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1198),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1206),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1207),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1212),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1213),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1218),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1235),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1243),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1248),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1258),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1262),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1273),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1282),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1293),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1302),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1312),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1323),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1324),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1331),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1332),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1338),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1344),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1348),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1352),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1356),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1360),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1364),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1369),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1373),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1377),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1381),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1386),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1390),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1394),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1398),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1399),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1404),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1411),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1412),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1424),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1428),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1429),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1442),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1443),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1444),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1445),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1446),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1447),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1448),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1449),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1450),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1451),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1452),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1457),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1461),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1462),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1470),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1471),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1472),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1473),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1474),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1475),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1476),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1477),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1478),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1479),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1480),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1481),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1482),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1483),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1484),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1485),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1486),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1487),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1488),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1496),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1500),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1504),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1508),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1509),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1510),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1515),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1516),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1524),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1525),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1526),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1527),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1528),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1529),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1534),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1538),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1542),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1543),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1548),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1549),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1550),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1551),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1557),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1558),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1563),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1564),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1569),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1573),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1577),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1578),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1583),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA identifier RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1587),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1595),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1596),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1605),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1609),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1610),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1611),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1612),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1618),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1619),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1625),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1626),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1637),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1638),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1648),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1649),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1659),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1664),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1669),
]
